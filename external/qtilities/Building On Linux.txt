INSTALL (Linux)
===============
This guide is to build the latest development branch of Qtilities on Linux (used Ubuntu 10.10).

To install Qtilities create a folder that will contain all the libraries used. Open a Terminal and navigate to that folder inside the Terminal. This location will be reffered to as [YOUR_LIB_PATH]. It is assumed that the Qt SDK is installed as well as git (see Required Software).

Required Software:
==================
Qt SDK
------
1. Get the latest SDK from http://qt.nokia.com/downloads
2. Install Qt SDK

git (optional)
-----------------
git is a fast version management system for distributed development. This installation uses git to get the required source files. 
1. Download git from http://git-scm.com/download
2. Install git
3. Make sure git is in your path. run the following command in a terminal window to make sure it is set up correctly
   "git --version"

Set up dependencies (Optional, disabled by default so you can skip to "Build Qtilities". See Dependencies.pri for more information)
===================
Qtiliites can be build against a few other libraries to extend its functionality. The following will list the dependencies as well as describe how to get them installed.

Qt Property Browser
-------------------
1. Get the qt-solutions Qt Addons from http://qt.gitorious.org/qt-solutions. 
   Run the following command: git clone git://gitorious.org/qt-solutions/qt-solutions.git qt-solutions
2. Build qtpropertybrowser, located inside the newly checked out qt-solutions folder.
   Lib files created should be in the "qtpropertybrowser/lib" folder.

Connection Analyzer for Qt
--------------------------
1. Download the conan for qt from http://sourceforge.net/projects/conanforqt/
   To make things a bit easier later on place the conan code in "[YOUR_LIB_PATH]/conanforqt/Conan/". 
2. Build Conan.
   It is advised to disable the "Shadow build" option in creator. The lib files should be in the "Conan/lib" folder after a successfull build.
   Build Debug and Release

Build Qtilities
===============
1. Get the source code from GitHub.
   Run the following command: git clone git://github.com/JPNaude/Qtilities.git qtilities
2. Open the Qtilities.pro file in QtCreator located in the src folder.
3. Check your project paths:
   Open the "Dependencies.pri" file located in the src folder and check that the paths are set up correctly. 
   QTILITIES_DEPENDENCIES should point to [YOUR_LIB_PATH]. Most probably "$$PWD/../../../".
4. Set up Qtilities build options
   1. If the dependencies was build correctly as described above, open the "Dependencies.pri" file located in the src folder.
   2. Uncomment the following lines if they are not already commented out.
      DEFINES += QTILITIES_PROPERTY_BROWSER
      DEFINES += QTILITIES_CONAN
5. Examples and Plugins
   To build the Qtilities Examples and Plugins the following must be done
   1. Using Qt Creator open the 2 pro files in the "src/Examples" and "src/Plugins" folders.
   2. Go to the Project mode and click on the QtilitiesPlugins tab at the top.
   3. Click on the Dependencies tab just underneath.
   4. Make sure that "Qtilities" is checked in the Dependencies window.
   5. Do the same for the Examples but both "Qtilities" and "QtilitiesPlugins" must be checked in the dependencies window.
6. Qtilities should be able to build now
   I have not tested this in a clean environment (yet) but if there are problems it is most likely due to directory paths or library names.

LIBRARIES
=========
Qtilities will not be able to run if the following steps are not followed. The libraries created by the dependencies as well as Qtilities must be in your library path. The best way to do this is to 
1. Create new file in /etc/ld.so.conf.d/ for example Qtilities.conf. One can be made for all of the shared libraries grouped together or one can be made for each shared library.
2. Edit the *.conf file and add all paths to shared libraries to the file, including the dependencies. The following should be added:
   [YOUR_LIB_PATH]/Qtilities/bin
   [YOUR_LIB_PATH]/Qtilities/bin/plugins
   [YOUR_LIB_PATH]/conanforqt/Conan/
   [YOUR_LIB_PATH]/qt-solutions/qtpropertybrowser/lib
3. Update the libraries path
   Run the following command: sudo ldconfig
   
USING QTILITIES
===============
Check out http://www.qtilities.org/docs/master/page_the_basics.html#basics_includes_and_namespaces for details on how to use Qtilities in your own project. 

Alternatively, to see how to use Qtilities in a qmake project as a thirdparty dependency using git submodules, see https://github.com/Ramblurr/Qtilities-Sample for an example. 
